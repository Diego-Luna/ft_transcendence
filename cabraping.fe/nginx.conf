events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    server {
        listen 80;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/localhost.pem;
        ssl_certificate_key /etc/nginx/ssl/localhost-key.pem;

        # Forward API requests to the backend service
        location ^~ /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Forward WebSocket requests to the backend service
        location ^~ /ws/ {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve static files for the frontend
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # Ensure JavaScript files are served with the correct MIME type
        location ~* \.(js)$ {
            root /usr/share/nginx/html;
            types {
                application/javascript js;
            }
            add_header Content-Type application/javascript;
            try_files $uri =404;
        }

        # Serve image files correctly
        location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
            root /usr/share/nginx/html;
            try_files $uri =404;
        }

        # Custom error page for 404
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Redirect all other non-specified routes to the 404 page
        location ~* "^/[^/]+/[^/]+" {
            return 404;
        }

        location ~* "^/[^/]+/[^/]+/[^/]+" {
            return 404;
        }
    }
}
